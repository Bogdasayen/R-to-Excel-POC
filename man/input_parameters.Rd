% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input_parameters.R
\name{input_parameters}
\alias{input_parameters}
\title{The input parameters class}
\description{
Class to store input parameter specification and samples for models
}
\examples{

## ------------------------------------------------
## Method `input_parameters$new`
## ------------------------------------------------

markov_inputs <- input_parameters$new(
  v_names = c(
    "Probability quit smoking website",
    "Probability quit smoking SoC",
    "Probability relapse",
    "Utility smoking",
    "Utility not smoking",
    "Cost website",
    "Cost GP smoking",
    "Cost statin smoking"
  ),
  v_descriptions = c(
    "Probability continue smoking website, follows a beta distribution",
    "Probability continue smoking SoC, follows a beta distribution",
    "Probability relapse, which is same across treatments and follows a beta distribution",
    "Utility smoking, follows a Normal distribution",
    "Utility not smoking, follows a Normal distribution",
    "Cost website, fixed value and model assumes no cost of SoC and no state costs",
    "Cost of 6-monthly, on average, GP visit (£49 from PRSSU) for smoking related illness, follows Normal distribution",
    "Cost of roughly 20\% of smokers taking statins (pravastatin at £3.45 per month), follows Normal distribution"
  ),
  v_type = c(
    "transition_probability",
    "transition_probability",
    "transition_probability",
    "utility",
    "utility",
    "one_off_cost",
    "cost",
    "cost"
  ),
  v_distributions = c(
    "beta",
    "beta",
    "beta",
    "normal",
    "fixed",
    "fixed",
    "normal",
    "normal"
  ),
  m_hyperparameters = matrix(
    c(15, 85, 12, 88, 8, 92, 0.95, 0.02, 1.0, NA, 50, NA, 49, 2, 0.69, 0.069),
    nrow = 8,
    ncol = 2,
    byrow = TRUE,
    dimnames = list(NULL, c("hp_1", "hp_2"))
  ),
  m_transition = matrix(
    c(1, 2, 1, 2, 2, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
    nrow = 8,
    ncol = 2,
    byrow = TRUE,
    dimnames = list(NULL, c("from", "to"))
  ),
  v_treatment = c(2, 1, NA, NA, NA, 1, NA, NA),
  v_state = c(1, 1, 2, 1, 2, NA, 1, 1)
)

## ------------------------------------------------
## Method `input_parameters$sample_values`
## ------------------------------------------------

markov_inputs$sample_values(n_samples = 1000)

## ------------------------------------------------
## Method `input_parameters$specify_excel`
## ------------------------------------------------

markov_inputs$specify_excel(
  sheet = "input_parameters"
)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{n_parameters}}{Number of parameters in the model}

\item{\code{n_samples}}{Number of probabilistic samples}

\item{\code{df_spec}}{Data frame specifying names and distributions of parameters}

\item{\code{m_values}}{Matrix of sample values defined by member function sample_values()}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-markov_model-new}{\code{input_parameters$new()}}
\item \href{#method-markov_model-sample_values}{\code{input_parameters$sample_values()}}
\item \href{#method-markov_model-specify_excel}{\code{input_parameters$specify_excel()}}
\item \href{#method-markov_model-clone}{\code{input_parameters$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-markov_model-new"></a>}}
\if{latex}{\out{\hypertarget{method-markov_model-new}{}}}
\subsection{Method \code{new()}}{
Initialise the input parameters object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{input_parameters$new(
  v_names,
  v_descriptions,
  v_type,
  v_distributions,
  m_hyperparameters,
  m_transition,
  v_treatment,
  v_state
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v_names}}{Vector of string names of the parameters (can be NULL)}

\item{\code{v_descriptions}}{Vector of string descriptions of the parameters (can be NULL)}

\item{\code{v_type}}{Vector of strings specifying type of parameter (e.g., transition_probability, one_off_cost, cost)}

\item{\code{v_distributions}}{Vector of strings specifying distributions (options are fixed, beta, normal)}

\item{\code{m_hyperparameters}}{Matrix of parameters of the corresponding distribution for this parameter (at least one value, and unused are NULL)}

\item{\code{m_transition}}{Matrix with from and to values identifying transitions which parameter informs (NA if not a transition probability parameter)}

\item{\code{v_treatment}}{Numeric vector identifying the treatment to which this parameter corresponds (NA if all)}

\item{\code{v_state}}{Numeric vector identifying the state to which this cost or utility parameter corresponds  (NA if all)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
input parameter object with df_spec giving specifications
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{markov_inputs <- input_parameters$new(
  v_names = c(
    "Probability quit smoking website",
    "Probability quit smoking SoC",
    "Probability relapse",
    "Utility smoking",
    "Utility not smoking",
    "Cost website",
    "Cost GP smoking",
    "Cost statin smoking"
  ),
  v_descriptions = c(
    "Probability continue smoking website, follows a beta distribution",
    "Probability continue smoking SoC, follows a beta distribution",
    "Probability relapse, which is same across treatments and follows a beta distribution",
    "Utility smoking, follows a Normal distribution",
    "Utility not smoking, follows a Normal distribution",
    "Cost website, fixed value and model assumes no cost of SoC and no state costs",
    "Cost of 6-monthly, on average, GP visit (£49 from PRSSU) for smoking related illness, follows Normal distribution",
    "Cost of roughly 20\% of smokers taking statins (pravastatin at £3.45 per month), follows Normal distribution"
  ),
  v_type = c(
    "transition_probability",
    "transition_probability",
    "transition_probability",
    "utility",
    "utility",
    "one_off_cost",
    "cost",
    "cost"
  ),
  v_distributions = c(
    "beta",
    "beta",
    "beta",
    "normal",
    "fixed",
    "fixed",
    "normal",
    "normal"
  ),
  m_hyperparameters = matrix(
    c(15, 85, 12, 88, 8, 92, 0.95, 0.02, 1.0, NA, 50, NA, 49, 2, 0.69, 0.069),
    nrow = 8,
    ncol = 2,
    byrow = TRUE,
    dimnames = list(NULL, c("hp_1", "hp_2"))
  ),
  m_transition = matrix(
    c(1, 2, 1, 2, 2, 1, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA),
    nrow = 8,
    ncol = 2,
    byrow = TRUE,
    dimnames = list(NULL, c("from", "to"))
  ),
  v_treatment = c(2, 1, NA, NA, NA, 1, NA, NA),
  v_state = c(1, 1, 2, 1, 2, NA, 1, 1)
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-markov_model-sample_values"></a>}}
\if{latex}{\out{\hypertarget{method-markov_model-sample_values}{}}}
\subsection{Method \code{sample_values()}}{
Function to generate random parameters based on the specification
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{input_parameters$sample_values(n_samples)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n_samples}}{Number of random samples to draw}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{markov_inputs$sample_values(n_samples = 1000)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-markov_model-specify_excel"></a>}}
\if{latex}{\out{\hypertarget{method-markov_model-specify_excel}{}}}
\subsection{Method \code{specify_excel()}}{
Function to add specification of parameters in Excel format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{input_parameters$specify_excel(sheet, startCol = 1, startRow = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sheet}}{Name of sheet to which input parameters are added}

\item{\code{startCol}}{Column number from which the input parameters are added}

\item{\code{startRow}}{Row number from which the input parameters are added}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{markov_inputs$specify_excel(
  sheet = "input_parameters"
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-markov_model-clone"></a>}}
\if{latex}{\out{\hypertarget{method-markov_model-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{input_parameters$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
